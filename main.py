# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'menu.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QPushButton
from PyQt5.QtGui import QIcon
from PyQt5.QtCore import QTimer
from algorithms import *
from grid import *

class Game():
    def __init__(self):
        pygame.init()
        self.game_init()

    # pygame initialization
    def game_init(self):
        self.rows = 50
        self.width = 800
        self.grid = make_grid(self.rows, self.width)

        self.start = None
        self.end = None

        self.win = pygame.display.set_mode((self.width, self.width))
        pygame.display.set_caption("Path visualizer")

    # pygame main loop
    def loop(self, window):
        draw(self.win, self.grid, self.rows, self.width)
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                return True
            if pygame.mouse.get_pressed()[0]:
                #print("pressed")
                pos = pygame.mouse.get_pos()
                row, col = get_clicked_pos(pos, self.rows, self.width)
                spot = self.grid[row][col]
                if not self.start and spot != self.end:
                    self.start = spot
                    self.start.make_start()
                elif not self.end and spot != self.start:
                    self.end = spot
                    self.end.make_end()
                elif spot != self.end and spot != self.start:
                    spot.make_barrier()
            elif pygame.mouse.get_pressed()[2]:
                pos = pygame.mouse.get_pos()
                row, col = get_clicked_pos(pos, self.rows, self.width)
                spot = self.grid[row][col]
                spot.reset()
                if spot == self.start:
                    self.start = None
                elif spot == self.end:
                    self.end = None
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE and self.start and self.end:
                    for row in self.grid:
                        for spot in row:
                            spot.update_neighbors(self.grid)

                    bfs(lambda: draw(self.win, self.grid, self.rows, self.width), self.grid, self.start, self.end)

                if event.key == pygame.K_c:
                    self.start = None
                    self.end = None
                    self.grid = make_grid(self.rows, self.width)
        return False


class Ui_MainWindow(object):
    def __init__(self, MainWindow, game):
        super().__init__()

        self.setupUi(MainWindow)
        self.init_pygame(game)
    
    def init_pygame(self, game):
        # https://stackoverflow.com/questions/46656634/pyqt5-qtimer-count-until-specific-seconds
        self.game = game
        self.timer = QTimer()
        self.timer.timeout.connect(self.pygame_loop)
        self.timer.start(0)

    def pygame_loop(self):
        if self.game.loop(self):
            self.close()
        
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(319, 300)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalSlider_1 = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider_1.setEnabled(True)
        self.horizontalSlider_1.setGeometry(QtCore.QRect(80, 30, 160, 16))
        self.horizontalSlider_1.setMouseTracking(False)
        self.horizontalSlider_1.setMaximum(50)
        self.horizontalSlider_1.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_1.setObjectName("horizontalSlider_1")
        self.horizontalSlider_2 = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider_2.setGeometry(QtCore.QRect(80, 60, 160, 16))
        self.horizontalSlider_2.setMaximum(50)
        self.horizontalSlider_2.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_2.setObjectName("horizontalSlider_2")
        self.horizontalSlider_3 = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider_3.setGeometry(QtCore.QRect(80, 90, 160, 16))
        self.horizontalSlider_3.setMaximum(50)
        self.horizontalSlider_3.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_3.setObjectName("horizontalSlider_3")
        self.horizontalSlider_4 = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider_4.setGeometry(QtCore.QRect(80, 120, 160, 16))
        self.horizontalSlider_4.setMaximum(50)
        self.horizontalSlider_4.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider_4.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.horizontalSlider_4.setObjectName("horizontalSlider_4")
        self.spinBox_1 = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox_1.setGeometry(QtCore.QRect(260, 20, 47, 24))
        self.spinBox_1.setMaximum(50)
        self.spinBox_1.setObjectName("spinBox_1")
        self.spinBox_2 = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox_2.setGeometry(QtCore.QRect(260, 50, 47, 24))
        self.spinBox_2.setMaximum(50)
        self.spinBox_2.setObjectName("spinBox_2")
        self.spinBox_3 = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox_3.setGeometry(QtCore.QRect(260, 80, 47, 24))
        self.spinBox_3.setMaximum(50)
        self.spinBox_3.setObjectName("spinBox_3")
        self.spinBox_4 = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox_4.setGeometry(QtCore.QRect(260, 110, 47, 24))
        self.spinBox_4.setMaximum(50)
        self.spinBox_4.setObjectName("spinBox_4")
        self.comboBox = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox.setGeometry(QtCore.QRect(140, 170, 91, 23))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.comboBox.setFont(font)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(0, 150, 311, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 30, 59, 15))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 60, 59, 15))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(10, 90, 59, 15))
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(10, 120, 59, 15))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(60, 170, 61, 21))
        font = QtGui.QFont()
        font.setFamily("Serif")
        font.setPointSize(9)
        self.label_5.setFont(font)
        self.label_5.setTextFormat(QtCore.Qt.AutoText)
        self.label_5.setScaledContents(False)
        self.label_5.setObjectName("label_5")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(90, 210, 91, 31))
        self.pushButton.setObjectName("pushButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 319, 20))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.horizontalSlider_4.sliderMoved['int'].connect(self.spinBox_4.setValue)
        self.spinBox_4.valueChanged['int'].connect(self.horizontalSlider_4.setValue)
        self.horizontalSlider_3.sliderMoved['int'].connect(self.spinBox_3.setValue)
        self.horizontalSlider_2.sliderMoved['int'].connect(self.spinBox_2.setValue)
        self.horizontalSlider_1.sliderMoved['int'].connect(self.spinBox_1.setValue)
        self.spinBox_3.valueChanged['int'].connect(self.horizontalSlider_3.setValue)
        self.spinBox_2.valueChanged['int'].connect(self.horizontalSlider_2.setValue)
        self.spinBox_1.valueChanged['int'].connect(self.horizontalSlider_1.setValue)
        self.pushButton.clicked.connect(self.find_path)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        MainWindow.show()
    
    def find_path(self):
        self.game.start = None
        self.game.end = None
        self.game.grid = make_grid(self.game.rows, self.game.width)
        s_row, s_col = self.spinBox_1.value(), self.spinBox_2.value()
        self.game.start = self.game.grid[s_row][s_col]
        self.game.start.make_start()

        e_row, e_col = self.spinBox_3.value(), self.spinBox_4.value()
        self.game.end = self.game.grid[e_row][e_col]
        self.game.end.make_end()

        for row in self.game.grid:
            for spot in row:
                spot.update_neighbors(self.game.grid)
        if self.comboBox.currentText() == "BFS":
            bfs(lambda: draw(self.game.win, self.game.grid, self.game.rows, self.game.width), self.game.grid, self.game.start, self.game.end)
        elif self.comboBox.currentText() == "A* Search":
            algorithm(lambda: draw(self.game.win, self.game.grid, self.game.rows, self.game.width), self.game.grid, self.game.start, self.game.end)
        elif self.comboBox.currentText() == "DFS":
            dfs(lambda: draw(self.game.win, self.game.grid, self.game.rows, self.game.width), self.game.grid, self.game.start, self.game.end)
        elif self.comboBox.currentText() == "Dijkstra":
            dfs(lambda: dijkstra(self.game.win, self.game.grid, self.game.rows, self.game.width), self.game.grid, self.game.start, self.game.end)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.comboBox.setItemText(0, _translate("MainWindow", "A* Search"))
        self.comboBox.setItemText(1, _translate("MainWindow", "BFS"))
        self.comboBox.setItemText(2, _translate("MainWindow", "DFS"))
        self.comboBox.setItemText(3, _translate("MainWindow", "DIjkstra"))
        self.label.setText(_translate("MainWindow", "Start X"))
        self.label_2.setText(_translate("MainWindow", "Start Y"))
        self.label_3.setText(_translate("MainWindow", "End X"))
        self.label_4.setText(_translate("MainWindow", "End Y"))
        self.label_5.setText(_translate("MainWindow", "Algorithm"))
        self.pushButton.setText(_translate("MainWindow", "Find Path"))


if __name__ == "__main__":
    import sys

    game = Game()
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow(MainWindow, game)

    sys.exit(app.exec_())

    
    
